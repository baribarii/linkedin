name: Run LinkedIn Bot Every Hour

on:
  schedule:
    - cron: '0 * * * *' # 매 정각 실행
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      # 프록시 없이 실제 IP 확인
      - name: Get actual GitHub Actions runner IP
        id: ip
        env:
          # 프록시 설정 비활성화
          HTTP_PROXY: ''
          HTTPS_PROXY: ''
        run: |
          echo "Current GitHub Actions Runner IP (add this to Webshare):"
          ACTUAL_IP=$(curl -s https://api.ipify.org)
          echo "IP: $ACTUAL_IP"
          echo "runner_ip=$ACTUAL_IP" >> $GITHUB_OUTPUT

      - name: Debug file list
        run: |
          ls -al
          ls -al linkedinbot.py

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # --- (필수) Chrome 설치 스텝 ---
      - name: Install Chrome
        run: |
          sudo apt-get update
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          google-chrome --version  # 설치된 Chrome 버전 확인

      - name: Debug Chrome installation
        run: |
          which google-chrome
          google-chrome --version
          ls -la /usr/bin/google-chrome*

      - name: Debug network conditions
        continue-on-error: true
        env:
          # 프록시 설정 비활성화하여 실제 네트워크 상태 확인
          HTTP_PROXY: ''
          HTTPS_PROXY: ''
        run: |
          ping -c 4 linkedin.com || echo "Ping failed but continuing..."
          echo "Runner IP for Webshare: $(curl -s https://api.ipify.org)"

      - name: Install additional dependencies for LinkedIn
        run: |
          sudo apt-get install -y xvfb
          pip install pyvirtualdisplay

      # LinkedIn Bot 실행 단계
      - name: Run LinkedIn Bot with Xvfb and Proxy
        env:
          LINKEDIN_GOOGLESHEET_API: ${{ secrets.LINKEDIN_GOOGLESHEET_API }}
          LINKEDIN_EMAIL: ${{ secrets.LINKEDIN_EMAIL }}
          LINKEDIN_PASSWORD: ${{ secrets.LINKEDIN_PASSWORD }}
          DISPLAY: ':99'
          HTTP_PROXY: ${{ secrets.HTTP_PROXY }}
          HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
        run: |
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          sleep 3
          python linkedinbot.py

      - name: List files after run (debug)
        run: ls -al

      - name: Upload all screenshots and logs
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: debug-files
          path: |
            *.png
            *.html
            *.log
            linkedin_cookies.pkl
          if-no-files-found: ignore
